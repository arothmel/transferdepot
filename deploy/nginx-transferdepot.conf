# TransferDepot upload-tuned Nginx front-end
# Assumes uWSGI exposes a unix socket at /run/uwsgi/transferdepot.sock

user nginx;
worker_processes auto;
error_log /var/log/nginx/transferdepot.error.log warn;
pid /run/nginx-transferdepot.pid;

events {
    worker_connections 4096;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile off;                 # allow nginx to stream directly without disk buffering
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 120s;
    keepalive_requests 1000;
    reset_timedout_connection on;

    # Large upload tuning
    client_max_body_size 0;       # do not reject on size at nginx layer
    client_body_timeout 3600s;
    lingering_timeout 20s;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$request_time"';
    access_log  /var/log/nginx/transferdepot.access.log  main;

    upstream transferdepot_uwsgi {
        server unix:/run/uwsgi/transferdepot.sock;
        keepalive 32;
    }

    server {
        listen 443 ssl http2;
        server_name transferdepot.example.com;

        # TODO: configure SSL certificate paths
        ssl_certificate     /etc/ssl/certs/transferdepot.crt;
        ssl_certificate_key /etc/ssl/private/transferdepot.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:TLS:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # UI uploads via uWSGI
        location / {
            include uwsgi_params;
            uwsgi_pass transferdepot_uwsgi;

            uwsgi_buffer_size 128k;           # align with uwsgi buffer-size
            uwsgi_buffers 16 128k;
            uwsgi_request_buffering off;      # stream request body straight through

            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;

            uwsgi_read_timeout 3600s;         # allow long pauses while clients recover
            uwsgi_send_timeout 3600s;
        }

        # Health check endpoint bypasses buffering as well
        location = /healthz {
            include uwsgi_params;
            uwsgi_pass transferdepot_uwsgi;
            uwsgi_read_timeout 10s;
        }

        client_body_buffer_size 128k;         # limit per-worker buffer to keep memory bounded
        proxy_buffering off;                  # ensure responses stream back immediately
        send_timeout 3600s;
    }
}
