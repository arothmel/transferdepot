# Pseudo Sh1re reverse proxy (DMZ stand-in)
# This nginx config terminates client connections and forwards to
# transferdepot's uWSGI HTTP listener.

worker_processes  1;
error_log logs/sh1re-error.log info;
pid logs/sh1re-nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Pull standard MIME database from the system install.
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile      off;
    tcp_nopush    on;
    tcp_nodelay   on;

upstream transferdepot_backend {
        # Backend listener that lives on the Analysis LAN side (virtca8).
        # Bind uwsgi on virtca8 to 160.72.160.62:8080 so Sh1re can reach it.
        server 160.72.160.62:8080;
        keepalive 16;
    }

    server {
        # Sh1re lives on the DMZ as 10.32.36.139 in UA. Bind the proxy to the
        # same IP locally so curls hit the “real” address.
        listen 10.32.36.139:8081;
        server_name _;

        access_log logs/sh1re-access.log;

        location / {
            proxy_pass http://transferdepot_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        location = /healthz {
            proxy_pass http://transferdepot_backend/admin/health;
            proxy_buffering off;
            proxy_read_timeout 10s;
        }
    }
}
